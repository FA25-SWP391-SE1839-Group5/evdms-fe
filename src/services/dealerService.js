import api from "./api";

// ============================================
// API CALLS - DEALERS
// ============================================

/**
 * Get All Dealers
 * @returns {Promise<AxiosResponse<any>>}
 */
export const getAllDealers = async () => {
    console.log("üì° API Call: GET /api/dealers");
    return api.get('/dealers');
};

/**
 * Get Dealer's ID
 * @param {string|number} dealerId - ID c·ªßa Dealer
 * @returns {Promise<AxiosResponse<any>>}
 */
export const getDealerById = (dealerId) => {
  console.log(`üì° API Call: GET /api/dealers/${dealerId}`);
  return api.get(`/dealers/${dealerId}`);
};

/**
 * CREATE Dealer
 * @param {object} dealerData - D·ªØ li·ªáu c·ªßa Dealer m·ªõi
 * @param {string} dealerData.name - T√™n Dealer (b·∫Øt bu·ªôc)
 * @param {string} dealerData.region - Khu v·ª±c (b·∫Øt bu·ªôc)
 * @param {string} dealerData.address - ƒê·ªãa ch·ªâ (b·∫Øt bu·ªôc)
 * @param {string} [dealerData.email] - Email (t√πy ch·ªçn)
 * @param {string} [dealerData.phone] - S·ªë ƒëi·ªán tho·∫°i (t√πy ch·ªçn)
 * @param {string} [dealerData.contactPerson] - Ng∆∞·ªùi li√™n h·ªá (t√πy ch·ªçn)
 * @param {string} [dealerData.taxCode] - M√£ s·ªë thu·∫ø (t√πy ch·ªçn)
 * @param {boolean} [dealerData.isActive] - Tr·∫°ng th√°i ho·∫°t ƒë·ªông (t√πy ch·ªçn, m·∫∑c ƒë·ªãnh l√† true)
 * @returns {Promise<AxiosResponse<any>>}
 */
export const createDealer = (dealerData) => {
  console.log("üì° API Call: POST /api/dealers");
  console.log("üì§ Sending data:", dealerData);
  // ƒê·∫£m b·∫£o ch·ªâ g·ª≠i c√°c tr∆∞·ªùng API c·∫ßn (name, region, address v√† c√°c tr∆∞·ªùng t√πy ch·ªçn kh√°c n·∫øu c√≥)
  const dataToSend = {
      name: dealerData.name,
      region: dealerData.region,
      address: dealerData.address,
      ...(dealerData.email && { email: dealerData.email }),
      ...(dealerData.phone && { phone: dealerData.phone }),
      ...(dealerData.contactPerson && { contactPerson: dealerData.contactPerson }),
      ...(dealerData.taxCode && { taxCode: dealerData.taxCode }),
      // G·ª≠i isActive n·∫øu c√≥ trong form, n·∫øu kh√¥ng backend c√≥ th·ªÉ t·ª± ƒë·∫∑t m·∫∑c ƒë·ªãnh
      ...(typeof dealerData.isActive === 'boolean' && { isActive: dealerData.isActive }), 
  };
  return api.post('/dealers', dataToSend);
};

/**
 * UPDATE Dealer
 * @param {string|number} dealerId - ID c·ªßa Dealer c·∫ßn c·∫≠p nh·∫≠t
 * @param {object} dealerData - D·ªØ li·ªáu c·∫≠p nh·∫≠t (ch·ªâ ch·ª©a c√°c tr∆∞·ªùng c·∫ßn thay ƒë·ªïi)
 * @returns {Promise<AxiosResponse<any>>}
 */
export const updateDealer = (dealerId, dealerData) => {
  console.log(`üì° API Call: PUT /api/dealers/${dealerId}`); // Ho·∫∑c PATCH n·∫øu API h·ªó tr·ª£
  console.log("üì§ Sending update data:", dealerData);
  // G·ª≠i to√†n b·ªô d·ªØ li·ªáu ho·∫∑c ch·ªâ c√°c tr∆∞·ªùng thay ƒë·ªïi t√πy thu·ªôc v√†o API (PUT th∆∞·ªùng g·ª≠i to√†n b·ªô)
  return api.put(`/dealers/${dealerId}`, dealerData); 
};

/**
 * DELETE Dealer
 * @param {string|number} dealerId - ID c·ªßa Dealer c·∫ßn x√≥a
 * @returns {Promise<AxiosResponse<any>>}
 */
export const deleteDealer = (dealerId) => {
  console.log(`üì° API Call: DELETE /api/dealers/${dealerId}`);
  return api.delete(`/dealers/${dealerId}`);
};

// ============================================
// API CALLS - DEALER CONTRACTS (M·ªöI)
// ============================================

/**
 * Get All Dealer Contracts
 * @returns {Promise<AxiosResponse<any>>}
 */
export const getAllDealerContracts = () => {
    console.log("üì° API Call: GET /api/dealer-contracts");
    return api.get('/dealer-contracts');
};

/**
 * CREATE Dealer Contract
 * @param {object} contractData - D·ªØ li·ªáu c·ªßa H·ª£p ƒë·ªìng m·ªõi
 * @param {string} contractData.dealerId
 * @param {string} contractData.startDate
 * @param {string} contractData.endDate
 * @param {number} contractData.salesTarget
 * @returns {Promise<AxiosResponse<any>>}
 */
export const createDealerContract = (contractData) => {
  console.log("üì° API Call: POST /api/dealer-contracts");
  console.log("üì§ Sending data:", contractData);
  return api.post('/dealer-contracts', contractData);
};

/**
 * UPDATE Dealer Contract
 * @param {string|number} contractId
 * @param {object} contractData
 * @returns {Promise<AxiosResponse<any>>}
 */
export const updateDealerContract = (contractId, contractData) => {
  console.log(`üì° API Call: PUT /api/dealer-contracts/${contractId}`);
  console.log("üì§ Sending update data:", contractData);
  return api.put(`/dealer-contracts/${contractId}`, contractData);
};




// ============================================
// C√ÅC API KH√ÅC LI√äN QUAN ƒê·∫æN DEALER (n·∫øu c·∫ßn)
// V√≠ d·ª•: DealerContract, DealerOrder, DealerPayment
// B·∫°n c√≥ th·ªÉ th√™m c√°c h√†m t∆∞∆°ng t·ª± ·ªü ƒë√¢y
// ============================================

// V√≠ d·ª• cho DealerContract:
// export const getAllDealerContracts = (dealerId) => {
//   console.log(`üì° API Call: GET /api/dealer-contracts?dealerId=${dealerId}`); // Gi·∫£ s·ª≠ c√≥ query param
//   return api.get('/dealer-contracts', { params: { dealerId } });
// };