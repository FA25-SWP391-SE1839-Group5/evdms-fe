import api from "./api";

// ============================================
// API CALLS - DEALERS
// ============================================

/**
 * Get All Dealers
 * @returns {Promise<AxiosResponse<any>>}
 */
export const getAllDealers = async () => {
    console.log("üì° API Call: GET /api/dealers");
    return api.get('/dealers');
};

/**
 * Get Dealer's ID
 * @param {string|number} dealerId - ID c·ªßa Dealer
 * @returns {Promise<AxiosResponse<any>>}
 */
export const getDealerById = (dealerId) => {
  console.log(`üì° API Call: GET /api/dealers/${dealerId}`);
  return api.get(`/dealers/${dealerId}`);
};

/**
 * CREATE Dealer
 * @param {object} dealerData - D·ªØ li·ªáu c·ªßa Dealer m·ªõi
 * @param {string} dealerData.name - T√™n Dealer (b·∫Øt bu·ªôc)
 * @param {string} dealerData.region - Khu v·ª±c (b·∫Øt bu·ªôc)
 * @param {string} dealerData.address - ƒê·ªãa ch·ªâ (b·∫Øt bu·ªôc)
 * @param {string} [dealerData.email] - Email (t√πy ch·ªçn)
 * @param {string} [dealerData.phone] - S·ªë ƒëi·ªán tho·∫°i (t√πy ch·ªçn)
 * @param {string} [dealerData.contactPerson] - Ng∆∞·ªùi li√™n h·ªá (t√πy ch·ªçn)
 * @param {string} [dealerData.taxCode] - M√£ s·ªë thu·∫ø (t√πy ch·ªçn)
 * @param {boolean} [dealerData.isActive] - Tr·∫°ng th√°i ho·∫°t ƒë·ªông (t√πy ch·ªçn, m·∫∑c ƒë·ªãnh l√† true)
 * @returns {Promise<AxiosResponse<any>>}
 */
export const createDealer = (dealerData) => {
  console.log("üì° API Call: POST /api/dealers");
  console.log("üì§ Sending data:", dealerData);
  // ƒê·∫£m b·∫£o ch·ªâ g·ª≠i c√°c tr∆∞·ªùng API c·∫ßn (name, region, address v√† c√°c tr∆∞·ªùng t√πy ch·ªçn kh√°c n·∫øu c√≥)
  const dataToSend = {
      name: dealerData.name,
      region: dealerData.region,
      address: dealerData.address,
      ...(dealerData.email && { email: dealerData.email }),
      ...(dealerData.phone && { phone: dealerData.phone }),
      ...(dealerData.contactPerson && { contactPerson: dealerData.contactPerson }),
      ...(dealerData.taxCode && { taxCode: dealerData.taxCode }),
      // G·ª≠i isActive n·∫øu c√≥ trong form, n·∫øu kh√¥ng backend c√≥ th·ªÉ t·ª± ƒë·∫∑t m·∫∑c ƒë·ªãnh
      ...(typeof dealerData.isActive === 'boolean' && { isActive: dealerData.isActive }), 
  };
  return api.post('/dealers', dataToSend);
};